<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0511.1508                               -->
<workbook original-version='18.1' source-build='2023.1.2 (20231.23.0511.1508)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Seoul bicycle rental dataset (_JqBwOEaS_a37dYNVftzmw_0b1c1cafa639423e9342b5f2640999f1_Seoul-bicycle-rental-dataset)' inline='true' name='federated.00xxo5y1pngg9k1elaeci09qox32' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='_JqBwOEaS_a37dYNVftzmw_0b1c1cafa639423e9342b5f2640999f1_Seoul-bicycle-rental-dataset' name='excel-direct.0alrwjb1idyfvm0zu7qq404lu98w'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/binnykaur/Downloads/_JqBwOEaS_a37dYNVftzmw_0b1c1cafa639423e9342b5f2640999f1_Seoul-bicycle-rental-dataset.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0alrwjb1idyfvm0zu7qq404lu98w' name='Seoul bicycle rental dataset' table='[&apos;Seoul bicycle rental dataset$&apos;]' type='table'>
          <columns gridOrigin='A1:N8761:no:A1:N8761:0' header='yes' outcome='2'>
            <column datatype='string' name='Date' ordinal='0' />
            <column datatype='integer' name='Rented Bike Count' ordinal='1' />
            <column datatype='integer' name='Hour' ordinal='2' />
            <column datatype='real' name='Temperature(蚓)' ordinal='3' />
            <column datatype='integer' name='Humidity(%)' ordinal='4' />
            <column datatype='real' name='Wind speed (m/s)' ordinal='5' />
            <column datatype='integer' name='Visibility (10m)' ordinal='6' />
            <column datatype='real' name='Dew point temperature(蚓)' ordinal='7' />
            <column datatype='real' name='Solar Radiation (MJ/m2)' ordinal='8' />
            <column datatype='real' name='Rainfall(mm)' ordinal='9' />
            <column datatype='real' name='Snowfall (cm)' ordinal='10' />
            <column datatype='string' name='Seasons' ordinal='11' />
            <column datatype='string' name='Holiday' ordinal='12' />
            <column datatype='string' name='Functioning Day' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0alrwjb1idyfvm0zu7qq404lu98w' name='Seoul bicycle rental dataset' table='[&apos;Seoul bicycle rental dataset$&apos;]' type='table'>
          <columns gridOrigin='A1:N8761:no:A1:N8761:0' header='yes' outcome='2'>
            <column datatype='string' name='Date' ordinal='0' />
            <column datatype='integer' name='Rented Bike Count' ordinal='1' />
            <column datatype='integer' name='Hour' ordinal='2' />
            <column datatype='real' name='Temperature(蚓)' ordinal='3' />
            <column datatype='integer' name='Humidity(%)' ordinal='4' />
            <column datatype='real' name='Wind speed (m/s)' ordinal='5' />
            <column datatype='integer' name='Visibility (10m)' ordinal='6' />
            <column datatype='real' name='Dew point temperature(蚓)' ordinal='7' />
            <column datatype='real' name='Solar Radiation (MJ/m2)' ordinal='8' />
            <column datatype='real' name='Rainfall(mm)' ordinal='9' />
            <column datatype='real' name='Snowfall (cm)' ordinal='10' />
            <column datatype='string' name='Seasons' ordinal='11' />
            <column datatype='string' name='Holiday' ordinal='12' />
            <column datatype='string' name='Functioning Day' ordinal='13' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:N8761:no:A1:N8761:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rented Bike Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rented Bike Count]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Rented Bike Count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Hour</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Hour]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Hour</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Temperature(蚓)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Temperature(蚓)]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Temperature(蚓)</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Humidity(%)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Humidity(%)]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Humidity(%)</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Wind speed (m/s)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Wind speed (m/s)]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Wind speed (m/s)</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Visibility (10m)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Visibility (10m)]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Visibility (10m)</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Dew point temperature(蚓)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Dew point temperature(蚓)]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Dew point temperature(蚓)</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Solar Radiation (MJ/m2)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Solar Radiation (MJ/m2)]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Solar Radiation (MJ/m2)</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rainfall(mm)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Rainfall(mm)]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Rainfall(mm)</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Snowfall (cm)</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Snowfall (cm)]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Snowfall (cm)</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Seasons</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Seasons]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Seasons</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Holiday</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Holiday]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Holiday</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Functioning Day</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Functioning Day]</local-name>
            <parent-name>[Seoul bicycle rental dataset]</parent-name>
            <remote-alias>Functioning Day</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Seasons]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Seoul bicycle rental dataset' datatype='table' name='[__tableau_internal_object_id__].[Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777]' role='measure' type='quantitative' />
      <column-instance column='[Seasons]' derivation='None' name='[none:Seasons:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Seasons:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Winter&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Summer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spring&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Autumn&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Seoul bicycle rental dataset' id='Seoul bicycle rental dataset_AEE08A06AFE1415199AA6A1406856777'>
            <properties context=''>
              <relation connection='excel-direct.0alrwjb1idyfvm0zu7qq404lu98w' name='Seoul bicycle rental dataset' table='[&apos;Seoul bicycle rental dataset$&apos;]' type='table'>
                <columns gridOrigin='A1:N8761:no:A1:N8761:0' header='yes' outcome='2'>
                  <column datatype='string' name='Date' ordinal='0' />
                  <column datatype='integer' name='Rented Bike Count' ordinal='1' />
                  <column datatype='integer' name='Hour' ordinal='2' />
                  <column datatype='real' name='Temperature(蚓)' ordinal='3' />
                  <column datatype='integer' name='Humidity(%)' ordinal='4' />
                  <column datatype='real' name='Wind speed (m/s)' ordinal='5' />
                  <column datatype='integer' name='Visibility (10m)' ordinal='6' />
                  <column datatype='real' name='Dew point temperature(蚓)' ordinal='7' />
                  <column datatype='real' name='Solar Radiation (MJ/m2)' ordinal='8' />
                  <column datatype='real' name='Rainfall(mm)' ordinal='9' />
                  <column datatype='real' name='Snowfall (cm)' ordinal='10' />
                  <column datatype='string' name='Seasons' ordinal='11' />
                  <column datatype='string' name='Holiday' ordinal='12' />
                  <column datatype='string' name='Functioning Day' ordinal='13' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='Seoul bicycle rental dataset (_JqBwOEaS_a37dYNVftzmw_0b1c1cafa639423e9342b5f2640999f1_Seoul-bicycle-rental-dataset)' name='federated.00xxo5y1pngg9k1elaeci09qox32' />
          </datasources>
          <datasource-dependencies datasource='federated.00xxo5y1pngg9k1elaeci09qox32'>
            <column datatype='string' name='[Date]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Hour]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Rented Bike Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Seasons]' role='dimension' type='nominal' />
            <column-instance column='[Rented Bike Count]' derivation='Avg' name='[avg:Rented Bike Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='None' name='[none:Date:nk]' pivot='key' type='nominal' />
            <column-instance column='[Hour]' derivation='None' name='[none:Hour:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Seasons]' derivation='None' name='[none:Seasons:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Date:nk]'>
            <groupfilter function='level-members' level='[none:Date:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Hour:qk]' included-values='in-range'>
            <min>8</min>
            <max>16</max>
          </filter>
          <filter class='categorical' column='[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Seasons:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:Seasons:nk]' />
              <groupfilter function='member' level='[none:Seasons:nk]' member='%null%' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Date:nk]</column>
            <column>[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Hour:qk]</column>
            <column>[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Seasons:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Seasons:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.00xxo5y1pngg9k1elaeci09qox32].[none:Seasons:nk] * [federated.00xxo5y1pngg9k1elaeci09qox32].[avg:Rented Bike Count:qk])</rows>
        <cols>[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Date:nk]</cols>
      </table>
      <simple-id uuid='{D1518132-E7A8-486E-898F-C627A29C5D10}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Date:nk]' type='filter' />
            <card param='[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Hour:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='3' param='[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Seasons:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Date:nk]</field>
            <field>[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Hour:qk]</field>
            <field>[federated.00xxo5y1pngg9k1elaeci09qox32].[none:Seasons:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{EB81D015-8DE8-4143-8F3C-0CD48B585F57}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Sheet 1' width='384'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
